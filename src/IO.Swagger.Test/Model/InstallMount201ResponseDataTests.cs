/* 
 * SpaceTraders API
 *
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * OpenAPI spec version: 2.3.0
 * Contact: joel@spacetraders.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing InstallMount201ResponseData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class InstallMount201ResponseDataTests
    {
        // TODO uncomment below to declare an instance variable for InstallMount201ResponseData
        //private InstallMount201ResponseData instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of InstallMount201ResponseData
            //instance = new InstallMount201ResponseData();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InstallMount201ResponseData
        /// </summary>
        [Test]
        public void InstallMount201ResponseDataInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" InstallMount201ResponseData
            //Assert.IsInstanceOfType<InstallMount201ResponseData> (instance, "variable 'instance' is a InstallMount201ResponseData");
        }


        /// <summary>
        /// Test the property 'Agent'
        /// </summary>
        [Test]
        public void AgentTest()
        {
            // TODO unit test for the property 'Agent'
        }
        /// <summary>
        /// Test the property 'Mounts'
        /// </summary>
        [Test]
        public void MountsTest()
        {
            // TODO unit test for the property 'Mounts'
        }
        /// <summary>
        /// Test the property 'Cargo'
        /// </summary>
        [Test]
        public void CargoTest()
        {
            // TODO unit test for the property 'Cargo'
        }
        /// <summary>
        /// Test the property 'Transaction'
        /// </summary>
        [Test]
        public void TransactionTest()
        {
            // TODO unit test for the property 'Transaction'
        }

    }

}
